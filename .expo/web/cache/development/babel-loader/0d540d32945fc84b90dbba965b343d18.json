{"ast":null,"code":"var _jsxFileName = \"/Users/zkyzno/Desktop/App/ReactNative/app-infomodel/App.js\",\n    _this = this;\n\nimport * as React from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { NavigationContainer, useNavigation } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport * as data from \"./data/datalist.json\";\nvar dataList = data.default;\nconsole.log(dataList);\n\nfunction Nav() {\n  var navigation = useNavigation();\n  var styles = StyleSheet.create({\n    button: {\n      padding: 20,\n      backgroundColor: '#00aa00',\n      width: 180,\n      height: 50,\n      textAlign: 'center'\n    },\n    navbar: {\n      position: 'absolute',\n      bottom: 20,\n      flexDirection: 'row',\n      flex: 1\n    }\n  });\n  var colorUnderlay = \"#007700\";\n  return React.createElement(View, {\n    style: styles.navbar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, React.createElement(TouchableHighlight, {\n    underlayColor: colorUnderlay,\n    style: styles.button,\n    onPress: function onPress() {\n      return navigation.navigate('Overview');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, \"Overview\")), React.createElement(TouchableHighlight, {\n    underlayColor: colorUnderlay,\n    style: styles.button,\n    onPress: function onPress() {\n      return navigation.navigate('TopFeature');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, \"TopFeature\")));\n}\n\nvar dataTest = [{\n  id: 1,\n  name: \"test1\",\n  age: 11\n}, {\n  id: 2,\n  name: \"test2\",\n  age: 22\n}, {\n  id: 3,\n  name: \"test3\",\n  age: 33\n}];\n\nvar itemModel = function itemModel(_ref) {\n  var item = _ref.item;\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 3\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: '#000'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, item.type), React.createElement(FlatList, {\n    data: item,\n    renderItem: itemModel,\n    keyExtractor: function keyExtractor(item) {\n      return item.id.toString();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }));\n};\n\nvar itemModelBtn = function itemModelBtn() {\n  return React.createElement(TouchableHighlight, {\n    underlayColor: colorUnderlay,\n    style: styles.button,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 3\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, item));\n};\n\nfunction HomeScreen(_ref2) {\n  var navigation = _ref2.navigation;\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, \"Home Screen\"), React.createElement(Button, {\n    onPress: function onPress() {\n      return navigation.navigate('Overview');\n    },\n    title: \"Let' Go\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }), React.createElement(FlatList, {\n    data: dataList,\n    renderItem: itemModel,\n    keyExtractor: function keyExtractor(item) {\n      return item.id.toString();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction OverviewScreen() {\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, \"Overview\"), React.createElement(Nav, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction TopFeature() {\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, \"TopFeature\"), React.createElement(Nav, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar Stack = createStackNavigator();\n\nfunction App() {\n  return React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Navigator, {\n    screenOptions: {\n      headerShown: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Home\",\n    component: HomeScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Overview\",\n    component: OverviewScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"TopFeature\",\n    component: TopFeature,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/zkyzno/Desktop/App/ReactNative/app-infomodel/App.js"],"names":["React","NavigationContainer","useNavigation","createStackNavigator","data","dataList","default","console","log","Nav","navigation","styles","StyleSheet","create","button","padding","backgroundColor","width","height","textAlign","navbar","position","bottom","flexDirection","flex","colorUnderlay","navigate","dataTest","id","name","age","itemModel","item","color","type","toString","itemModelBtn","HomeScreen","alignItems","justifyContent","OverviewScreen","TopFeature","Stack","App","headerShown"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Button, View, Text, TouchableHighlight, StyleSheet, FlatList} from 'react-native';\nimport { NavigationContainer, useNavigation } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport * as data from './data/datalist.json';\nconst dataList = data.default;\nconsole.log(dataList); // o\n\nfunction Nav() {\n  \n  const navigation = useNavigation();\n\n  const styles = StyleSheet.create({\n    button: {\n      padding: 20,\n      backgroundColor: '#00aa00',\n      width: 180,\n      height: 50,\n      textAlign: 'center',\n    },\n  \n    navbar: {\n      position: 'absolute',\n      bottom: 20,\n      flexDirection: 'row',\n      flex: 1, \n    }\n  });\n\n  const colorUnderlay = \"#007700\";\n  \n  return (\n    <View style={styles.navbar}>\n      <TouchableHighlight underlayColor={colorUnderlay} style={styles.button} onPress={()=>navigation.navigate('Overview')}>\n        <Text>Overview</Text>\n      </TouchableHighlight>\n      <TouchableHighlight underlayColor={colorUnderlay} style={styles.button} onPress={()=>navigation.navigate('TopFeature')}>\n        <Text>TopFeature</Text>\n      </TouchableHighlight>\n    </View>\n    \n\n  );\n}\n\nconst dataTest = [\n  { id: 1, name: \"test1\", age: 11 },\n  { id: 2, name: \"test2\", age: 22 },\n\n  { id: 3, name: \"test3\", age: 33 }\n]\n\nconst itemModel = ({item})=>(\n  <View>\n    <Text style={{color: '#000'}}>{item.type}</Text>\n    <FlatList data={item} renderItem={itemModel} keyExtractor={item => item.id.toString()} />\n  </View>\n);\n\nconst itemModelBtn = () => (\n  <TouchableHighlight underlayColor={colorUnderlay} style={styles.button}>\n        <Text>{item}</Text>\n  </TouchableHighlight>\n);\n\nfunction HomeScreen({ navigation }) {\n\n  return (\n    <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n      <Text>Home Screen</Text>\n      <Button onPress={()=>navigation.navigate('Overview')} title=\"Let' Go\" />\n      <FlatList data={dataList} renderItem={itemModel} keyExtractor={item => item.id.toString()} />\n    </View>\n  );\n}\n\nfunction OverviewScreen() {\n  return (\n    <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n      <Text>Overview</Text>\n      <Nav />\n    </View>\n  );\n}\n\nfunction TopFeature() {\n  return (\n    <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n      <Text>TopFeature</Text>\n      <Nav />\n    </View>\n  );\n}\n\nconst Stack = createStackNavigator();\n\nfunction App() {\n  return (\n    <NavigationContainer>\n      <Stack.Navigator screenOptions={{\n          headerShown: false\n        }}\n      >\n        <Stack.Screen name=\"Home\" component={HomeScreen} />\n        <Stack.Screen name=\"Overview\" component={OverviewScreen} />\n        <Stack.Screen name=\"TopFeature\" component={TopFeature} />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}